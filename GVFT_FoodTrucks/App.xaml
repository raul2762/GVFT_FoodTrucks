<Application x:Class="GVFT_FoodTrucks.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:GVFT_FoodTrucks"
             StartupUri="wAdmin_area.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="PrimaryBrush" Color="#f39c12" />
            <SolidColorBrush x:Key="PrimaryFont" Color="White" />
            <!--#region Style Para el TextBox del CboCustom-->
            <SolidColorBrush x:Key="fondo" Color="Gainsboro" Opacity="0.65"/>
            <Style x:Key="CboStyleForTextBox" TargetType="{x:Type TextBoxBase}">

                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">

                            <Border Name="Border" Padding="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  BorderBrush="LightGray" >
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                                <!--<Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource fondo}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="DimGray"/>
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
            <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <!--#endregion-->
            <!--#region Style Para ListBox del CboCustom-->
            <SolidColorBrush x:Key="fondo2" Color="DeepSkyBlue" Opacity="0.2"/>
            <SolidColorBrush x:Key="bordeColor" Color="Cyan" Opacity="0.7"/>
            <Style x:Key="CboItemContainer" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">

                            <Border x:Name="IconBorder" Padding="2" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="IconBorder" Property="Background" Value="{StaticResource fondo2}"/>
                                    <Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource bordeColor}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="IconBorder" Property="Background" Value="{StaticResource fondo2}"/>
                                    <Setter TargetName="IconBorder" Property="BorderBrush" Value="{StaticResource bordeColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            <!--#region Style Para el Badged-->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <SineEase x:Key="BadgeEase" EasingMode="EaseOut" />
            <Storyboard x:Key="BadgeChangedStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
                    <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1.4" />
                    <EasingDoubleKeyFrame EasingFunction="{StaticResource BadgeEase}"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style x:Key="BadgedStyle1" TargetType="{x:Type Controls:Badged}">
                <Setter Property="BadgeBackground" Value="{DynamicResource AccentBaseColorBrush}" />
                <Setter Property="BadgeChangedStoryboard" Value="{StaticResource BadgeChangedStoryboard}" />
                <Setter Property="BadgeForeground" Value="{DynamicResource IdealForegroundColorBrush}" />
                <Setter Property="BadgePlacementMode" Value="BottomLeft" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Controls:Badged}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <Border x:Name="PART_BadgeContainer"
                                MinWidth="18"
                                MinHeight="18"
                                Padding="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Width="32"
                                Height="30"
                                Margin="-10,-15,-17,-15"
                                Background="{TemplateBinding BadgeBackground}"
                                CornerRadius="14"
                                RenderTransformOrigin=".5,.5"
                                TextElement.FontSize="17"
                                TextElement.FontWeight="DemiBold"
                                Visibility="{TemplateBinding IsBadgeSet, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Border.RenderTransform>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                    <ContentControl Margin="1 0 1 0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Badge}"
                                            Focusable="False"
                                            Foreground="{TemplateBinding BadgeForeground}"
                                            IsTabStop="False" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="BadgePlacementMode" Value="TopLeft">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Top">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="TopRight">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Top" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Right">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="BottomRight">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Right" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Bottom">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Center" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="BottomLeft">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Bottom" />
                                </Trigger>
                                <Trigger Property="BadgePlacementMode" Value="Left">
                                    <Setter TargetName="PART_BadgeContainer" Property="HorizontalAlignment" Value="Left" />
                                    <Setter TargetName="PART_BadgeContainer" Property="VerticalAlignment" Value="Center" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="PART_BadgeContainer" Property="Background" Value="{DynamicResource ResourceKey=MahApps.Metro.Brushes.Badged.DisabledBackgroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>
            <!--#endregion-->
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Orange.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>
